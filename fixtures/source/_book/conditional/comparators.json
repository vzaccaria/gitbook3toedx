{
    "progress": {
        "prevPercent": 44.44444444444444,
        "percent": 47.22222222222222,
        "chapters": [
            {
                "title": "Introduction",
                "prev": null,
                "next": {
                    "title": "Basics {W1}",
                    "level": "1",
                    "path": "basics/README.md"
                },
                "level": "0",
                "path": "README.md",
                "percent": 0,
                "done": true
            },
            {
                "title": "Basics {W1}",
                "prev": {
                    "title": "Introduction",
                    "level": "0",
                    "path": "README.md"
                },
                "next": {
                    "title": "Comments {HW,W2}",
                    "level": "1.1",
                    "path": "basics/comments.md"
                },
                "level": "1",
                "path": "basics/README.md",
                "percent": 2.7777777777777777,
                "done": true
            },
            {
                "title": "Comments {HW,W2}",
                "prev": {
                    "title": "Basics {W1}",
                    "level": "1",
                    "path": "basics/README.md"
                },
                "next": {
                    "title": "Variables {W3}",
                    "level": "1.2",
                    "path": "basics/variables.md"
                },
                "level": "1.1",
                "path": "basics/comments.md",
                "percent": 5.555555555555555,
                "done": true
            },
            {
                "title": "Variables {W3}",
                "prev": {
                    "title": "Comments {HW,W2}",
                    "level": "1.1",
                    "path": "basics/comments.md"
                },
                "next": {
                    "title": "Types",
                    "level": "1.3",
                    "path": "basics/types.md"
                },
                "level": "1.2",
                "path": "basics/variables.md",
                "percent": 8.333333333333334,
                "done": true
            },
            {
                "title": "Types",
                "prev": {
                    "title": "Variables {W3}",
                    "level": "1.2",
                    "path": "basics/variables.md"
                },
                "next": {
                    "title": "Equality {HW}",
                    "level": "1.4",
                    "path": "basics/equality.md"
                },
                "level": "1.3",
                "path": "basics/types.md",
                "percent": 11.11111111111111,
                "done": true
            },
            {
                "title": "Equality {HW}",
                "prev": {
                    "title": "Types",
                    "level": "1.3",
                    "path": "basics/types.md"
                },
                "next": {
                    "title": "Numbers {LAB}",
                    "level": "2",
                    "path": "numbers/README.md"
                },
                "level": "1.4",
                "path": "basics/equality.md",
                "percent": 13.88888888888889,
                "done": true
            },
            {
                "title": "Numbers {LAB}",
                "prev": {
                    "title": "Equality {HW}",
                    "level": "1.4",
                    "path": "basics/equality.md"
                },
                "next": {
                    "title": "Creation",
                    "level": "2.1",
                    "path": "numbers/create.md"
                },
                "level": "2",
                "path": "numbers/README.md",
                "percent": 16.666666666666668,
                "done": true
            },
            {
                "title": "Creation",
                "prev": {
                    "title": "Numbers {LAB}",
                    "level": "2",
                    "path": "numbers/README.md"
                },
                "next": {
                    "title": "Basic Operators",
                    "level": "2.2",
                    "path": "numbers/operators.md"
                },
                "level": "2.1",
                "path": "numbers/create.md",
                "percent": 19.444444444444443,
                "done": true
            },
            {
                "title": "Basic Operators",
                "prev": {
                    "title": "Creation",
                    "level": "2.1",
                    "path": "numbers/create.md"
                },
                "next": {
                    "title": "Advanced Operators",
                    "level": "2.3",
                    "path": "numbers/advanced.md"
                },
                "level": "2.2",
                "path": "numbers/operators.md",
                "percent": 22.22222222222222,
                "done": true
            },
            {
                "title": "Advanced Operators",
                "prev": {
                    "title": "Basic Operators",
                    "level": "2.2",
                    "path": "numbers/operators.md"
                },
                "next": {
                    "title": "Strings",
                    "level": "3",
                    "path": "strings/README.md"
                },
                "level": "2.3",
                "path": "numbers/advanced.md",
                "percent": 25,
                "done": true
            },
            {
                "title": "Strings",
                "prev": {
                    "title": "Advanced Operators",
                    "level": "2.3",
                    "path": "numbers/advanced.md"
                },
                "next": {
                    "title": "Creation",
                    "level": "3.1",
                    "path": "strings/create.md"
                },
                "level": "3",
                "path": "strings/README.md",
                "percent": 27.77777777777778,
                "done": true
            },
            {
                "title": "Creation",
                "prev": {
                    "title": "Strings",
                    "level": "3",
                    "path": "strings/README.md"
                },
                "next": {
                    "title": "Concatenation",
                    "level": "3.2",
                    "path": "strings/concat.md"
                },
                "level": "3.1",
                "path": "strings/create.md",
                "percent": 30.555555555555557,
                "done": true
            },
            {
                "title": "Concatenation",
                "prev": {
                    "title": "Creation",
                    "level": "3.1",
                    "path": "strings/create.md"
                },
                "next": {
                    "title": "Length",
                    "level": "3.3",
                    "path": "strings/length.md"
                },
                "level": "3.2",
                "path": "strings/concat.md",
                "percent": 33.333333333333336,
                "done": true
            },
            {
                "title": "Length",
                "prev": {
                    "title": "Concatenation",
                    "level": "3.2",
                    "path": "strings/concat.md"
                },
                "next": {
                    "title": "Conditional Logic",
                    "level": "4",
                    "path": "conditional/README.md"
                },
                "level": "3.3",
                "path": "strings/length.md",
                "percent": 36.111111111111114,
                "done": true
            },
            {
                "title": "Conditional Logic",
                "prev": {
                    "title": "Length",
                    "level": "3.3",
                    "path": "strings/length.md"
                },
                "next": {
                    "title": "If",
                    "level": "4.1",
                    "path": "conditional/if.md"
                },
                "level": "4",
                "path": "conditional/README.md",
                "percent": 38.888888888888886,
                "done": true
            },
            {
                "title": "If",
                "prev": {
                    "title": "Conditional Logic",
                    "level": "4",
                    "path": "conditional/README.md"
                },
                "next": {
                    "title": "Else",
                    "level": "4.2",
                    "path": "conditional/else.md"
                },
                "level": "4.1",
                "path": "conditional/if.md",
                "percent": 41.666666666666664,
                "done": true
            },
            {
                "title": "Else",
                "prev": {
                    "title": "If",
                    "level": "4.1",
                    "path": "conditional/if.md"
                },
                "next": {
                    "title": "Comparators",
                    "level": "4.3",
                    "path": "conditional/comparators.md"
                },
                "level": "4.2",
                "path": "conditional/else.md",
                "percent": 44.44444444444444,
                "done": true
            },
            {
                "title": "Comparators",
                "prev": {
                    "title": "Else",
                    "level": "4.2",
                    "path": "conditional/else.md"
                },
                "next": {
                    "title": "Concatenate",
                    "level": "4.4",
                    "path": "conditional/concatenate.md"
                },
                "level": "4.3",
                "path": "conditional/comparators.md",
                "percent": 47.22222222222222,
                "done": true
            },
            {
                "title": "Concatenate",
                "prev": {
                    "title": "Comparators",
                    "level": "4.3",
                    "path": "conditional/comparators.md"
                },
                "next": {
                    "title": "Arrays",
                    "level": "5",
                    "path": "arrays/README.md"
                },
                "level": "4.4",
                "path": "conditional/concatenate.md",
                "percent": 50,
                "done": false
            },
            {
                "title": "Arrays",
                "prev": {
                    "title": "Concatenate",
                    "level": "4.4",
                    "path": "conditional/concatenate.md"
                },
                "next": {
                    "title": "Indices",
                    "level": "5.1",
                    "path": "arrays/indices.md"
                },
                "level": "5",
                "path": "arrays/README.md",
                "percent": 52.77777777777778,
                "done": false
            },
            {
                "title": "Indices",
                "prev": {
                    "title": "Arrays",
                    "level": "5",
                    "path": "arrays/README.md"
                },
                "next": {
                    "title": "Length",
                    "level": "5.2",
                    "path": "arrays/length.md"
                },
                "level": "5.1",
                "path": "arrays/indices.md",
                "percent": 55.55555555555556,
                "done": false
            },
            {
                "title": "Length",
                "prev": {
                    "title": "Indices",
                    "level": "5.1",
                    "path": "arrays/indices.md"
                },
                "next": {
                    "title": "Loops",
                    "level": "6",
                    "path": "loops/README.md"
                },
                "level": "5.2",
                "path": "arrays/length.md",
                "percent": 58.333333333333336,
                "done": false
            },
            {
                "title": "Loops",
                "prev": {
                    "title": "Length",
                    "level": "5.2",
                    "path": "arrays/length.md"
                },
                "next": {
                    "title": "For",
                    "level": "6.1",
                    "path": "loops/for.md"
                },
                "level": "6",
                "path": "loops/README.md",
                "percent": 61.111111111111114,
                "done": false
            },
            {
                "title": "For",
                "prev": {
                    "title": "Loops",
                    "level": "6",
                    "path": "loops/README.md"
                },
                "next": {
                    "title": "While",
                    "level": "6.2",
                    "path": "loops/while.md"
                },
                "level": "6.1",
                "path": "loops/for.md",
                "percent": 63.888888888888886,
                "done": false
            },
            {
                "title": "While",
                "prev": {
                    "title": "For",
                    "level": "6.1",
                    "path": "loops/for.md"
                },
                "next": {
                    "title": "Functions",
                    "level": "7",
                    "path": "functions/README.md"
                },
                "level": "6.2",
                "path": "loops/while.md",
                "percent": 66.66666666666667,
                "done": false
            },
            {
                "title": "Functions",
                "prev": {
                    "title": "While",
                    "level": "6.2",
                    "path": "loops/while.md"
                },
                "next": {
                    "title": "Declare",
                    "level": "7.1",
                    "path": "functions/declare.md"
                },
                "level": "7",
                "path": "functions/README.md",
                "percent": 69.44444444444444,
                "done": false
            },
            {
                "title": "Declare",
                "prev": {
                    "title": "Functions",
                    "level": "7",
                    "path": "functions/README.md"
                },
                "next": {
                    "title": "Higher order",
                    "level": "7.2",
                    "path": "functions/higher_order.md"
                },
                "level": "7.1",
                "path": "functions/declare.md",
                "percent": 72.22222222222223,
                "done": false
            },
            {
                "title": "Higher order",
                "prev": {
                    "title": "Declare",
                    "level": "7.1",
                    "path": "functions/declare.md"
                },
                "next": {
                    "title": "Objects",
                    "level": "8",
                    "path": "objects/README.md"
                },
                "level": "7.2",
                "path": "functions/higher_order.md",
                "percent": 75,
                "done": false
            },
            {
                "title": "Objects",
                "prev": {
                    "title": "Higher order",
                    "level": "7.2",
                    "path": "functions/higher_order.md"
                },
                "next": {
                    "title": "Creation",
                    "level": "8.1",
                    "path": "objects/creation.md"
                },
                "level": "8",
                "path": "objects/README.md",
                "percent": 77.77777777777777,
                "done": false
            },
            {
                "title": "Creation",
                "prev": {
                    "title": "Objects",
                    "level": "8",
                    "path": "objects/README.md"
                },
                "next": {
                    "title": "Properties",
                    "level": "8.2",
                    "path": "objects/properties.md"
                },
                "level": "8.1",
                "path": "objects/creation.md",
                "percent": 80.55555555555556,
                "done": false
            },
            {
                "title": "Properties",
                "prev": {
                    "title": "Creation",
                    "level": "8.1",
                    "path": "objects/creation.md"
                },
                "next": {
                    "title": "Mutable",
                    "level": "8.3",
                    "path": "objects/mutable.md"
                },
                "level": "8.2",
                "path": "objects/properties.md",
                "percent": 83.33333333333333,
                "done": false
            },
            {
                "title": "Mutable",
                "prev": {
                    "title": "Properties",
                    "level": "8.2",
                    "path": "objects/properties.md"
                },
                "next": {
                    "title": "Reference",
                    "level": "8.4",
                    "path": "objects/reference.md"
                },
                "level": "8.3",
                "path": "objects/mutable.md",
                "percent": 86.11111111111111,
                "done": false
            },
            {
                "title": "Reference",
                "prev": {
                    "title": "Mutable",
                    "level": "8.3",
                    "path": "objects/mutable.md"
                },
                "next": {
                    "title": "Prototype",
                    "level": "8.5",
                    "path": "objects/prototype.md"
                },
                "level": "8.4",
                "path": "objects/reference.md",
                "percent": 88.88888888888889,
                "done": false
            },
            {
                "title": "Prototype",
                "prev": {
                    "title": "Reference",
                    "level": "8.4",
                    "path": "objects/reference.md"
                },
                "next": {
                    "title": "Delete",
                    "level": "8.6",
                    "path": "objects/delete.md"
                },
                "level": "8.5",
                "path": "objects/prototype.md",
                "percent": 91.66666666666667,
                "done": false
            },
            {
                "title": "Delete",
                "prev": {
                    "title": "Prototype",
                    "level": "8.5",
                    "path": "objects/prototype.md"
                },
                "next": {
                    "title": "Enumeration",
                    "level": "8.7",
                    "path": "objects/enumeration.md"
                },
                "level": "8.6",
                "path": "objects/delete.md",
                "percent": 94.44444444444444,
                "done": false
            },
            {
                "title": "Enumeration",
                "prev": {
                    "title": "Delete",
                    "level": "8.6",
                    "path": "objects/delete.md"
                },
                "next": {
                    "title": "Global footprint",
                    "level": "8.8",
                    "path": "objects/global_footprint.md"
                },
                "level": "8.7",
                "path": "objects/enumeration.md",
                "percent": 97.22222222222223,
                "done": false
            },
            {
                "title": "Global footprint",
                "prev": {
                    "title": "Enumeration",
                    "level": "8.7",
                    "path": "objects/enumeration.md"
                },
                "next": null,
                "level": "8.8",
                "path": "objects/global_footprint.md",
                "percent": 100,
                "done": false
            }
        ],
        "current": {
            "title": "Comparators",
            "prev": {
                "title": "Else",
                "level": "4.2",
                "path": "conditional/else.md"
            },
            "next": {
                "title": "Concatenate",
                "level": "4.4",
                "path": "conditional/concatenate.md"
            },
            "level": "4.3",
            "path": "conditional/comparators.md",
            "percent": 47.22222222222222,
            "done": true
        }
    },
    "lexed": [
        [
            {
                "type": "heading",
                "depth": 1,
                "text": "Comparators"
            },
            {
                "type": "paragraph",
                "text": "Lets now focus on the conditional part:"
            },
            {
                "type": "code",
                "lang": "javascript",
                "text": "if (country === \"France\") {\n    ...\n}"
            },
            {
                "type": "paragraph",
                "text": "The conditional part is the variable `country` followed by the three equal signs (`===`). Three equal signs tests if the variable `country` has both the correct value (`France`) and also the correct type (`String`). You can test conditions with double equal signs, too, however a conditional such as `if (x == 5)` would then return true for both `var x = 5;` and `var x = \"5\";`. Depending on what your program is doing, this could make quite a difference.  It is highly recommended as a best practice that you always compare equality with three equal signs (`===` and `!==`) instead of two (`==` and `!=`)."
            },
            {
                "type": "paragraph",
                "text": "Other conditional test:"
            },
            {
                "type": "list_start",
                "ordered": false
            },
            {
                "type": "list_item_start"
            },
            {
                "type": "text",
                "text": "```x > a```: is x bigger than a?"
            },
            {
                "type": "list_item_end"
            },
            {
                "type": "list_item_start"
            },
            {
                "type": "text",
                "text": "```x < a```: is x less than a?"
            },
            {
                "type": "list_item_end"
            },
            {
                "type": "list_item_start"
            },
            {
                "type": "text",
                "text": "```x <= a```: is x less than or equal to a?"
            },
            {
                "type": "list_item_end"
            },
            {
                "type": "list_item_start"
            },
            {
                "type": "text",
                "text": "```x >=a```: is x greater than or equal to a?"
            },
            {
                "type": "list_item_end"
            },
            {
                "type": "list_item_start"
            },
            {
                "type": "text",
                "text": "```x != a```: is x not a?"
            },
            {
                "type": "list_item_end"
            },
            {
                "type": "list_item_start"
            },
            {
                "type": "text",
                "text": "```x```: does x exist?"
            },
            {
                "type": "space"
            },
            {
                "type": "list_item_end"
            },
            {
                "type": "list_end"
            }
        ],
        [
            {
                "type": "paragraph",
                "text": "Add a condition to change the value of `a` to the number 10 if `x` is bigger than 5."
            },
            {
                "type": "code",
                "lang": "js",
                "text": "var x = 6;\nvar a = 0;"
            },
            {
                "type": "code",
                "lang": "js",
                "text": "var x = 6;\nvar a = 0;\n\nif (x > 5) {\n    a = 10;\n}"
            },
            {
                "type": "code",
                "lang": "js",
                "text": "assert(a === 10);"
            }
        ],
        [
            {
                "type": "heading",
                "depth": 2,
                "text": "Logical Comparison"
            },
            {
                "type": "paragraph",
                "text": " In order to avoid the if-else hassle, simple logical comparisons can be utilised."
            },
            {
                "type": "code",
                "lang": "js",
                "text": "var topper = (marks > 85) ? \"YES\" : \"NO\";"
            },
            {
                "type": "paragraph",
                "text": "In the above example, `?` is a logical operator. The code says that if the value of marks is greater than 85 i.e. `marks > 85` , then `topper = YES` ; otherwise `topper = NO` . Basically, if the comparison condition proves true, the first argument is accessed and if the comparison condition is false , the second argument is accessed."
            }
        ]
    ],
    "sections": [
        {
            "id": "gitbook_19",
            "type": "normal",
            "content": "<h1 id=\"comparators\">Comparators</h1>\n<p>Lets now focus on the conditional part:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">if</span> (country === <span class=\"hljs-string\">\"France\"</span>) {\n    ...\n}\n</code></pre>\n<p>The conditional part is the variable <code>country</code> followed by the three equal signs (<code>===</code>). Three equal signs tests if the variable <code>country</code> has both the correct value (<code>France</code>) and also the correct type (<code>String</code>). You can test conditions with double equal signs, too, however a conditional such as <code>if (x == 5)</code> would then return true for both <code>var x = 5;</code> and <code>var x = &quot;5&quot;;</code>. Depending on what your program is doing, this could make quite a difference.  It is highly recommended as a best practice that you always compare equality with three equal signs (<code>===</code> and <code>!==</code>) instead of two (<code>==</code> and <code>!=</code>).</p>\n<p>Other conditional test:</p>\n<ul>\n<li><code>x &gt; a</code>: is x bigger than a?</li>\n<li><code>x &lt; a</code>: is x less than a?</li>\n<li><code>x &lt;= a</code>: is x less than or equal to a?</li>\n<li><code>x &gt;=a</code>: is x greater than or equal to a?</li>\n<li><code>x != a</code>: is x not a?</li>\n<li><code>x</code>: does x exist?</li>\n</ul>\n"
        },
        {
            "id": "gitbook_20",
            "type": "exercise",
            "content": "<p>Add a condition to change the value of <code>a</code> to the number 10 if <code>x</code> is bigger than 5.</p>\n",
            "lang": "javascript",
            "code": {
                "base": "var x = 6;\nvar a = 0;",
                "solution": "var x = 6;\nvar a = 0;\n\nif (x > 5) {\n    a = 10;\n}",
                "validation": "assert(a === 10);",
                "context": null
            }
        },
        {
            "id": "gitbook_21",
            "type": "normal",
            "content": "<h2 id=\"logical-comparison\">Logical Comparison</h2>\n<p> In order to avoid the if-else hassle, simple logical comparisons can be utilised.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> topper = (marks &gt; <span class=\"hljs-number\">85</span>) ? <span class=\"hljs-string\">\"YES\"</span> : <span class=\"hljs-string\">\"NO\"</span>;\n</code></pre>\n<p>In the above example, <code>?</code> is a logical operator. The code says that if the value of marks is greater than 85 i.e. <code>marks &gt; 85</code> , then <code>topper = YES</code> ; otherwise <code>topper = NO</code> . Basically, if the comparison condition proves true, the first argument is accessed and if the comparison condition is false , the second argument is accessed.</p>\n"
        }
    ]
}